syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.github.resqlite.proto.raft";
option java_outer_classname = "RaftProto";

package proto_raft;

// The Raft service definition.
service Raft {
  // Sends an AppendEntries RPC.
  rpc AppendEntries (AppendEntriesRequest) returns (AppendEntriesResponse) {}

  // Send a RequestVote RPC.
  rpc RequestVote (RequestVoteRequest) returns (RequestVoteResponse) {}
}

// For the message definitions here, please refer to Figure 2 of the Raft paper.

message AppendEntriesRequest {
  // TODO(jmuindi): Fill this out.
}


message AppendEntriesResponse {
  // TODO(jmuindi): Fill this out.
}


// This invoked by candidated to gather votes.
message RequestVoteRequest {
  // Candidate's term
  int64 term = 1;

  // Candidate requesting the vote.
  // This is the fully qualified name for the node (hostname/ip + port number).
  string candidateId = 2;

  // Index of candidate's last log entry
  int64 lastLogIndex = 3;

  // Term of candidate's last log entry
  int64 lastLogTerm = 4;
}

message RequestVoteResponse {
  // Current term for candidate to update themselves.
  int64 term = 1;

  // If true, indicates that the node has voted for the candidate to be a leader.
  bool voteGranted = 2;
}