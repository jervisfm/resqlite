// Code generated by protoc-gen-go. DO NOT EDIT.
// source: resqlite.proto

/*
Package proto_resqlite is a generated protocol buffer package.

It is generated from these files:
	resqlite.proto

It has these top-level messages:
	SqlCommandRequest
	SqlCommandResponse
*/
package proto_resqlite

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SqlCommandRequest struct {
}

func (m *SqlCommandRequest) Reset()                    { *m = SqlCommandRequest{} }
func (m *SqlCommandRequest) String() string            { return proto.CompactTextString(m) }
func (*SqlCommandRequest) ProtoMessage()               {}
func (*SqlCommandRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SqlCommandResponse struct {
}

func (m *SqlCommandResponse) Reset()                    { *m = SqlCommandResponse{} }
func (m *SqlCommandResponse) String() string            { return proto.CompactTextString(m) }
func (*SqlCommandResponse) ProtoMessage()               {}
func (*SqlCommandResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*SqlCommandRequest)(nil), "proto_resqlite.SqlCommandRequest")
	proto.RegisterType((*SqlCommandResponse)(nil), "proto_resqlite.SqlCommandResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ReSqlite service

type ReSqliteClient interface {
	// Sends a SQL command for processing.
	SendSqlCommand(ctx context.Context, in *SqlCommandRequest, opts ...grpc.CallOption) (*SqlCommandResponse, error)
}

type reSqliteClient struct {
	cc *grpc.ClientConn
}

func NewReSqliteClient(cc *grpc.ClientConn) ReSqliteClient {
	return &reSqliteClient{cc}
}

func (c *reSqliteClient) SendSqlCommand(ctx context.Context, in *SqlCommandRequest, opts ...grpc.CallOption) (*SqlCommandResponse, error) {
	out := new(SqlCommandResponse)
	err := grpc.Invoke(ctx, "/proto_resqlite.ReSqlite/SendSqlCommand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ReSqlite service

type ReSqliteServer interface {
	// Sends a SQL command for processing.
	SendSqlCommand(context.Context, *SqlCommandRequest) (*SqlCommandResponse, error)
}

func RegisterReSqliteServer(s *grpc.Server, srv ReSqliteServer) {
	s.RegisterService(&_ReSqlite_serviceDesc, srv)
}

func _ReSqlite_SendSqlCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SqlCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReSqliteServer).SendSqlCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_resqlite.ReSqlite/SendSqlCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReSqliteServer).SendSqlCommand(ctx, req.(*SqlCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReSqlite_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto_resqlite.ReSqlite",
	HandlerType: (*ReSqliteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendSqlCommand",
			Handler:    _ReSqlite_SendSqlCommand_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "resqlite.proto",
}

func init() { proto.RegisterFile("resqlite.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 149 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x4a, 0x2d, 0x2e,
	0xcc, 0xc9, 0x2c, 0x49, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x03, 0x53, 0xf1, 0x30,
	0x51, 0x25, 0x61, 0x2e, 0xc1, 0xe0, 0xc2, 0x1c, 0xe7, 0xfc, 0xdc, 0xdc, 0xc4, 0xbc, 0x94, 0xa0,
	0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x25, 0x11, 0x2e, 0x21, 0x64, 0xc1, 0xe2, 0x82, 0xfc, 0xbc,
	0xe2, 0x54, 0xa3, 0x54, 0x2e, 0x8e, 0xa0, 0xd4, 0x60, 0xb0, 0x36, 0xa1, 0x48, 0x2e, 0xbe, 0xe0,
	0xd4, 0xbc, 0x14, 0x84, 0x2a, 0x21, 0x45, 0x3d, 0x54, 0x93, 0xf5, 0x30, 0x8c, 0x95, 0x52, 0xc2,
	0xa7, 0x04, 0x62, 0x89, 0x12, 0x83, 0x93, 0x29, 0x97, 0x52, 0x72, 0x7e, 0xae, 0x5e, 0x7a, 0x66,
	0x49, 0x46, 0x69, 0x92, 0x1e, 0xaa, 0xf3, 0xe1, 0x5c, 0x27, 0x5e, 0x98, 0x53, 0x02, 0x40, 0xe2,
	0x01, 0x8c, 0x49, 0x6c, 0x60, 0x05, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5d, 0xec, 0xa4,
	0xbc, 0xf1, 0x00, 0x00, 0x00,
}
